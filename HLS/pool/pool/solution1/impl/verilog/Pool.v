// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Pool_Pool,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4026,HLS_SYN_LUT=4668,HLS_VERSION=2022_2}" *)

module Pool (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 59'd1;
parameter    ap_ST_fsm_state2 = 59'd2;
parameter    ap_ST_fsm_state3 = 59'd4;
parameter    ap_ST_fsm_state4 = 59'd8;
parameter    ap_ST_fsm_state5 = 59'd16;
parameter    ap_ST_fsm_state6 = 59'd32;
parameter    ap_ST_fsm_state7 = 59'd64;
parameter    ap_ST_fsm_state8 = 59'd128;
parameter    ap_ST_fsm_state9 = 59'd256;
parameter    ap_ST_fsm_state10 = 59'd512;
parameter    ap_ST_fsm_state11 = 59'd1024;
parameter    ap_ST_fsm_state12 = 59'd2048;
parameter    ap_ST_fsm_state13 = 59'd4096;
parameter    ap_ST_fsm_state14 = 59'd8192;
parameter    ap_ST_fsm_state15 = 59'd16384;
parameter    ap_ST_fsm_state16 = 59'd32768;
parameter    ap_ST_fsm_state17 = 59'd65536;
parameter    ap_ST_fsm_state18 = 59'd131072;
parameter    ap_ST_fsm_state19 = 59'd262144;
parameter    ap_ST_fsm_state20 = 59'd524288;
parameter    ap_ST_fsm_state21 = 59'd1048576;
parameter    ap_ST_fsm_state22 = 59'd2097152;
parameter    ap_ST_fsm_state23 = 59'd4194304;
parameter    ap_ST_fsm_state24 = 59'd8388608;
parameter    ap_ST_fsm_state25 = 59'd16777216;
parameter    ap_ST_fsm_state26 = 59'd33554432;
parameter    ap_ST_fsm_state27 = 59'd67108864;
parameter    ap_ST_fsm_state28 = 59'd134217728;
parameter    ap_ST_fsm_state29 = 59'd268435456;
parameter    ap_ST_fsm_state30 = 59'd536870912;
parameter    ap_ST_fsm_state31 = 59'd1073741824;
parameter    ap_ST_fsm_state32 = 59'd2147483648;
parameter    ap_ST_fsm_state33 = 59'd4294967296;
parameter    ap_ST_fsm_state34 = 59'd8589934592;
parameter    ap_ST_fsm_state35 = 59'd17179869184;
parameter    ap_ST_fsm_state36 = 59'd34359738368;
parameter    ap_ST_fsm_state37 = 59'd68719476736;
parameter    ap_ST_fsm_state38 = 59'd137438953472;
parameter    ap_ST_fsm_state39 = 59'd274877906944;
parameter    ap_ST_fsm_state40 = 59'd549755813888;
parameter    ap_ST_fsm_state41 = 59'd1099511627776;
parameter    ap_ST_fsm_state42 = 59'd2199023255552;
parameter    ap_ST_fsm_state43 = 59'd4398046511104;
parameter    ap_ST_fsm_state44 = 59'd8796093022208;
parameter    ap_ST_fsm_state45 = 59'd17592186044416;
parameter    ap_ST_fsm_state46 = 59'd35184372088832;
parameter    ap_ST_fsm_state47 = 59'd70368744177664;
parameter    ap_ST_fsm_state48 = 59'd140737488355328;
parameter    ap_ST_fsm_state49 = 59'd281474976710656;
parameter    ap_ST_fsm_state50 = 59'd562949953421312;
parameter    ap_ST_fsm_state51 = 59'd1125899906842624;
parameter    ap_ST_fsm_state52 = 59'd2251799813685248;
parameter    ap_ST_fsm_state53 = 59'd4503599627370496;
parameter    ap_ST_fsm_state54 = 59'd9007199254740992;
parameter    ap_ST_fsm_state55 = 59'd18014398509481984;
parameter    ap_ST_fsm_state56 = 59'd36028797018963968;
parameter    ap_ST_fsm_state57 = 59'd72057594037927936;
parameter    ap_ST_fsm_state58 = 59'd144115188075855872;
parameter    ap_ST_fsm_state59 = 59'd288230376151711744;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [58:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] CHin;
wire   [15:0] Hin;
wire   [15:0] Win;
wire   [7:0] Kx;
wire   [7:0] Ky;
wire   [1:0] mode;
wire   [63:0] feature_in;
wire   [63:0] feature_out;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state39;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_state54;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state59;
reg   [63:0] feature_out_read_reg_672;
reg   [63:0] feature_in_read_reg_677;
reg   [1:0] mode_read_reg_682;
reg   [7:0] Kx_read_reg_689;
reg   [15:0] Win_read_reg_694;
reg   [15:0] CHin_read_reg_705;
wire   [15:0] zext_ln1513_fu_240_p1;
reg   [15:0] zext_ln1513_reg_718;
wire   [15:0] zext_ln1513_1_fu_250_p1;
reg   [15:0] zext_ln1513_1_reg_725;
wire   [0:0] cmp_i_i_fu_285_p2;
reg   [0:0] cmp_i_i_reg_733;
wire    ap_CS_fsm_state19;
wire   [15:0] mul_i92_fu_290_p2;
reg   [15:0] mul_i92_reg_740;
wire   [15:0] grp_fu_244_p2;
reg   [15:0] ret_V_12_reg_746;
wire    ap_CS_fsm_state20;
wire   [31:0] zext_ln541_fu_298_p1;
reg   [31:0] zext_ln541_reg_757;
wire   [31:0] grp_fu_598_p2;
reg   [31:0] mul_ln6_reg_769;
wire    ap_CS_fsm_state23;
wire   [47:0] CHin_cast_fu_306_p1;
reg   [47:0] CHin_cast_reg_775;
wire    ap_CS_fsm_state24;
wire   [31:0] rhs_V_1_fu_318_p1;
reg   [31:0] rhs_V_1_reg_787;
wire    ap_CS_fsm_state25;
wire   [31:0] grp_fu_237_p1;
reg   [31:0] conv_i_reg_792;
wire   [31:0] sum_fu_338_p3;
reg   [31:0] sum_reg_797;
wire   [47:0] grp_fu_312_p2;
reg   [47:0] mul_ln6_1_reg_802;
wire   [0:0] icmp_ln1027_fu_346_p2;
reg   [0:0] icmp_ln1027_reg_807;
wire    ap_CS_fsm_state26;
wire   [31:0] grp_fu_604_p2;
reg   [31:0] ret_V_reg_822;
wire    ap_CS_fsm_state29;
wire   [47:0] zext_ln541_1_fu_358_p1;
wire    ap_CS_fsm_state30;
wire   [47:0] grp_fu_361_p2;
reg   [47:0] mul_ln541_reg_832;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln1027_3_fu_386_p2;
reg   [0:0] icmp_ln1027_3_reg_843;
wire   [0:0] icmp_ln1027_2_fu_369_p2;
wire   [0:0] select_ln1495_4_fu_396_p3;
reg   [0:0] select_ln1495_4_reg_852;
(* use_dsp48 = "no" *) wire   [15:0] i_4_fu_433_p2;
wire    ap_CS_fsm_state32;
wire   [15:0] select_ln25_fu_443_p3;
wire   [15:0] select_ln1495_1_fu_490_p3;
reg   [15:0] select_ln1495_1_reg_880;
wire    ap_CS_fsm_state34;
wire   [15:0] select_ln25_1_fu_512_p3;
reg   [15:0] select_ln25_1_reg_890;
wire    ap_CS_fsm_state35;
wire   [31:0] grp_fu_620_p2;
reg   [31:0] ret_V_mid1_reg_895;
wire  signed [15:0] grp_fu_625_p2;
reg   [15:0] mul_ln40_reg_900;
wire   [31:0] grp_fu_630_p3;
reg   [31:0] add_ln51_2_reg_905;
wire    ap_CS_fsm_state36;
wire   [47:0] grp_fu_521_p2;
reg   [47:0] mul_ln541_1_reg_915;
wire    ap_CS_fsm_state37;
reg   [63:0] gmem_addr_reg_923;
wire    ap_CS_fsm_state38;
wire   [31:0] sum_3_fu_588_p3;
reg   [31:0] sum_3_reg_929;
wire    ap_CS_fsm_state53;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_start;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_done;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_idle;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_ready;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWVALID;
wire   [63:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWADDR;
wire   [0:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWID;
wire   [31:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWLEN;
wire   [2:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWSIZE;
wire   [1:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWBURST;
wire   [1:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWLOCK;
wire   [3:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWCACHE;
wire   [2:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWPROT;
wire   [3:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWQOS;
wire   [3:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWREGION;
wire   [0:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWUSER;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WVALID;
wire   [31:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WDATA;
wire   [3:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WSTRB;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WLAST;
wire   [0:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WID;
wire   [0:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WUSER;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARVALID;
wire   [63:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARADDR;
wire   [0:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARID;
wire   [31:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARLEN;
wire   [2:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARSIZE;
wire   [1:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARBURST;
wire   [1:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARLOCK;
wire   [3:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARCACHE;
wire   [2:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARPROT;
wire   [3:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARQOS;
wire   [3:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARREGION;
wire   [0:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARUSER;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_RREADY;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_BREADY;
wire   [31:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_sum_3_out;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_sum_3_out_ap_vld;
wire  signed [32:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_grp_fu_361_p_din0;
wire   [15:0] grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_grp_fu_361_p_din1;
wire    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_grp_fu_361_p_ce;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
wire   [31:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg    gmem_BREADY;
reg    grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_start_reg;
wire  signed [63:0] sext_ln51_fu_578_p1;
reg   [15:0] lhs_V_fu_128;
wire   [15:0] j_fu_465_p2;
reg   [15:0] i_fu_132;
wire   [15:0] select_ln1027_fu_454_p3;
reg   [31:0] indvar_flatten9_fu_136;
wire   [31:0] select_ln1027_1_fu_409_p3;
reg   [15:0] c_fu_140;
reg   [47:0] indvar_flatten31_fu_144;
wire   [47:0] add_ln1027_1_fu_374_p2;
wire   [31:0] grp_fu_237_p0;
wire   [7:0] grp_fu_244_p1;
wire   [7:0] grp_fu_254_p1;
wire   [7:0] mul_i92_fu_290_p0;
wire   [7:0] mul_i92_fu_290_p1;
wire   [15:0] grp_fu_254_p2;
wire   [15:0] grp_fu_312_p0;
wire   [31:0] grp_fu_312_p1;
wire   [0:0] switch_selectcmp_fu_321_p2;
wire   [0:0] empty_fu_333_p2;
wire   [31:0] switch_select_fu_326_p3;
wire  signed [15:0] conv3_i_i_i753_cast_fu_354_p0;
reg  signed [32:0] grp_fu_361_p0;
reg   [15:0] grp_fu_361_p1;
wire   [0:0] icmp_ln1027_4_fu_391_p2;
wire   [31:0] add_ln1027_fu_403_p2;
wire  signed [15:0] select_ln1495_fu_427_p2;
wire   [15:0] select_ln1495_fu_427_p3;
wire   [0:0] or_ln25_fu_439_p2;
wire   [15:0] add_ln24_fu_484_p2;
wire  signed [15:0] grp_fu_609_p2;
wire  signed [15:0] grp_fu_614_p2;
wire   [15:0] select_ln1495_2_fu_506_p3;
wire   [31:0] grp_fu_521_p0;
wire   [15:0] grp_fu_521_p1;
wire   [47:0] select_ln1495_3_fu_526_p3;
wire   [47:0] zext_ln51_fu_542_p1;
wire   [47:0] select_ln25_2_fu_532_p3;
wire   [47:0] add_ln51_1_fu_545_p2;
wire   [49:0] shl_ln_fu_551_p3;
wire   [63:0] zext_ln51_1_fu_559_p1;
wire   [63:0] add_ln51_fu_563_p2;
wire   [61:0] trunc_ln_fu_568_p4;
wire   [31:0] grp_fu_233_p2;
wire   [15:0] grp_fu_598_p0;
wire   [15:0] grp_fu_598_p1;
wire   [15:0] grp_fu_604_p0;
wire   [15:0] grp_fu_604_p1;
wire   [7:0] grp_fu_609_p1;
wire   [7:0] grp_fu_614_p1;
wire   [15:0] grp_fu_620_p0;
wire   [15:0] grp_fu_620_p1;
wire   [7:0] grp_fu_625_p1;
wire   [15:0] grp_fu_630_p0;
wire   [15:0] grp_fu_630_p1;
wire   [15:0] grp_fu_630_p2;
reg    grp_fu_233_ce;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
reg    grp_fu_244_ap_start;
wire    grp_fu_244_ap_done;
reg    grp_fu_254_ap_start;
wire    grp_fu_254_ap_done;
reg    grp_fu_361_ce;
reg    grp_fu_521_ce;
reg   [58:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
reg    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
reg    ap_ST_fsm_state59_blk;
wire   [15:0] grp_fu_244_p10;
wire   [15:0] grp_fu_254_p10;
wire   [47:0] grp_fu_312_p00;
wire   [47:0] grp_fu_312_p10;
wire   [47:0] grp_fu_521_p00;
wire   [31:0] grp_fu_598_p00;
wire   [31:0] grp_fu_598_p10;
wire   [31:0] grp_fu_604_p00;
wire   [31:0] grp_fu_620_p00;
wire   [31:0] grp_fu_630_p00;
wire   [31:0] grp_fu_630_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 59'd1;
#0 grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_start_reg = 1'b0;
end

Pool_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5 grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_start),
    .ap_done(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_done),
    .ap_idle(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_idle),
    .ap_ready(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_ready),
    .sum(sum_reg_797),
    .m_axi_gmem_AWVALID(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .mul_i92(mul_i92_reg_740),
    .Kx(Kx_read_reg_689),
    .select_ln25_1(select_ln25_1_reg_890),
    .rhs_V_1(CHin_read_reg_705),
    .rhs_V_2(Win_read_reg_694),
    .mul_ln40(mul_ln40_reg_900),
    .mode(mode_read_reg_682),
    .zext_ln1495(select_ln1495_1_reg_880),
    .feature_in(feature_in_read_reg_677),
    .sum_3_out(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_sum_3_out),
    .sum_3_out_ap_vld(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_sum_3_out_ap_vld),
    .grp_fu_361_p_din0(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_grp_fu_361_p_din0),
    .grp_fu_361_p_din1(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_grp_fu_361_p_din1),
    .grp_fu_361_p_dout0(grp_fu_361_p2),
    .grp_fu_361_p_ce(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_grp_fu_361_p_ce)
);

Pool_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .CHin(CHin),
    .Hin(Hin),
    .Win(Win),
    .Kx(Kx),
    .Ky(Ky),
    .mode(mode),
    .feature_in(feature_in),
    .feature_out(feature_out),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Pool_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARADDR),
    .I_ARLEN(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_reg_923),
    .I_AWLEN(32'd1),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY)
);

Pool_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_sum_3_out),
    .din1(conv_i_reg_792),
    .ce(grp_fu_233_ce),
    .dout(grp_fu_233_p2)
);

Pool_uitofp_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_6_no_dsp_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_237_p0),
    .ce(1'b1),
    .dout(grp_fu_237_p1)
);

Pool_udiv_16ns_8ns_16_20_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
udiv_16ns_8ns_16_20_seq_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_244_ap_start),
    .done(grp_fu_244_ap_done),
    .din0(Win),
    .din1(grp_fu_244_p1),
    .ce(1'b1),
    .dout(grp_fu_244_p2)
);

Pool_udiv_16ns_8ns_16_20_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
udiv_16ns_8ns_16_20_seq_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_254_ap_start),
    .done(grp_fu_254_ap_done),
    .din0(Hin),
    .din1(grp_fu_254_p1),
    .ce(1'b1),
    .dout(grp_fu_254_p2)
);

Pool_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U28(
    .din0(mul_i92_fu_290_p0),
    .din1(mul_i92_fu_290_p1),
    .dout(mul_i92_fu_290_p2)
);

Pool_mul_16ns_32ns_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_16ns_32ns_48_2_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_312_p0),
    .din1(grp_fu_312_p1),
    .ce(1'b1),
    .dout(grp_fu_312_p2)
);

Pool_mul_32s_16ns_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
mul_32s_16ns_48_2_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_361_p0),
    .din1(grp_fu_361_p1),
    .ce(grp_fu_361_ce),
    .dout(grp_fu_361_p2)
);

Pool_mul_32ns_16ns_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
mul_32ns_16ns_48_2_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_521_p0),
    .din1(grp_fu_521_p1),
    .ce(grp_fu_521_ce),
    .dout(grp_fu_521_p2)
);

Pool_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_598_p0),
    .din1(grp_fu_598_p1),
    .ce(1'b1),
    .dout(grp_fu_598_p2)
);

Pool_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_604_p0),
    .din1(grp_fu_604_p1),
    .ce(1'b1),
    .dout(grp_fu_604_p2)
);

Pool_mul_mul_16ns_8ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_8ns_16_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_fu_132),
    .din1(grp_fu_609_p1),
    .ce(1'b1),
    .dout(grp_fu_609_p2)
);

Pool_mul_mul_16ns_8ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_8ns_16_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_4_fu_433_p2),
    .din1(grp_fu_614_p1),
    .ce(1'b1),
    .dout(grp_fu_614_p2)
);

Pool_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_620_p0),
    .din1(grp_fu_620_p1),
    .ce(1'b1),
    .dout(grp_fu_620_p2)
);

Pool_mul_mul_16ns_8ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_8ns_16_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln25_fu_443_p3),
    .din1(grp_fu_625_p1),
    .ce(1'b1),
    .dout(grp_fu_625_p2)
);

Pool_mac_muladd_16ns_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mac_muladd_16ns_16ns_16ns_32_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_630_p0),
    .din1(grp_fu_630_p1),
    .din2(grp_fu_630_p2),
    .ce(1'b1),
    .dout(grp_fu_630_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state36)) begin
            grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_start_reg <= 1'b1;
        end else if ((grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_ready == 1'b1)) begin
            grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_fu_140 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        c_fu_140 <= select_ln1495_1_fu_490_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_132 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        i_fu_132 <= select_ln1027_fu_454_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten31_fu_144 <= 48'd0;
    end else if (((icmp_ln1027_2_fu_369_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        indvar_flatten31_fu_144 <= add_ln1027_1_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten9_fu_136 <= 32'd0;
    end else if (((icmp_ln1027_2_fu_369_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        indvar_flatten9_fu_136 <= select_ln1027_1_fu_409_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        lhs_V_fu_128 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        lhs_V_fu_128 <= j_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        CHin_cast_reg_775[15 : 0] <= CHin_cast_fu_306_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        CHin_read_reg_705 <= CHin;
        Kx_read_reg_689 <= Kx;
        Win_read_reg_694 <= Win;
        feature_in_read_reg_677 <= feature_in;
        feature_out_read_reg_672 <= feature_out;
        mode_read_reg_682 <= mode;
        zext_ln1513_1_reg_725[7 : 0] <= zext_ln1513_1_fu_250_p1[7 : 0];
        zext_ln1513_reg_718[7 : 0] <= zext_ln1513_fu_240_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln51_2_reg_905 <= grp_fu_630_p3;
        mul_ln40_reg_900 <= grp_fu_625_p2;
        select_ln25_1_reg_890 <= select_ln25_1_fu_512_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        cmp_i_i_reg_733 <= cmp_i_i_fu_285_p2;
        mul_i92_reg_740 <= mul_i92_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (cmp_i_i_reg_733 == 1'd1))) begin
        conv_i_reg_792 <= grp_fu_237_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        gmem_addr_reg_923 <= sext_ln51_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_2_fu_369_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        icmp_ln1027_3_reg_843 <= icmp_ln1027_3_fu_386_p2;
        select_ln1495_4_reg_852 <= select_ln1495_4_fu_396_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        icmp_ln1027_reg_807 <= icmp_ln1027_fu_346_p2;
        mul_ln6_1_reg_802 <= grp_fu_312_p2;
        rhs_V_1_reg_787[15 : 0] <= rhs_V_1_fu_318_p1[15 : 0];
        sum_reg_797[5 : 2] <= sum_fu_338_p3[5 : 2];
sum_reg_797[7] <= sum_fu_338_p3[7];
sum_reg_797[9] <= sum_fu_338_p3[9];
sum_reg_797[13] <= sum_fu_338_p3[13];
sum_reg_797[16 : 15] <= sum_fu_338_p3[16 : 15];
sum_reg_797[21 : 20] <= sum_fu_338_p3[21 : 20];
sum_reg_797[25 : 23] <= sum_fu_338_p3[25 : 23];
sum_reg_797[28 : 27] <= sum_fu_338_p3[28 : 27];
sum_reg_797[31 : 30] <= sum_fu_338_p3[31 : 30];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln1495_4_reg_852 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        mul_ln541_1_reg_915 <= grp_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        mul_ln541_reg_832 <= grp_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        mul_ln6_reg_769 <= grp_fu_598_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ret_V_12_reg_746 <= grp_fu_244_p2;
        zext_ln541_reg_757[15 : 0] <= zext_ln541_fu_298_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln1495_4_reg_852 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        ret_V_mid1_reg_895 <= grp_fu_620_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ret_V_reg_822 <= grp_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        select_ln1495_1_reg_880 <= select_ln1495_1_fu_490_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        sum_3_reg_929 <= sum_3_fu_588_p3;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

always @ (*) begin
    if ((grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_done == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((gmem_AWREADY == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

always @ (*) begin
    if ((gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state54_blk = 1'b1;
    end else begin
        ap_ST_fsm_state54_blk = 1'b0;
    end
end

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

always @ (*) begin
    if ((gmem_BVALID == 1'b0)) begin
        ap_ST_fsm_state59_blk = 1'b1;
    end else begin
        ap_ST_fsm_state59_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln1027_2_fu_369_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_2_fu_369_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        gmem_ARVALID = grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        gmem_RREADY = grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state38) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_fu_233_ce = 1'b1;
    end else begin
        grp_fu_233_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_244_ap_start = 1'b1;
    end else begin
        grp_fu_244_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_254_ap_start = 1'b1;
    end else begin
        grp_fu_254_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_361_ce = grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_grp_fu_361_p_ce;
    end else begin
        grp_fu_361_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_361_p0 = grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_grp_fu_361_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_361_p0 = zext_ln541_1_fu_358_p1;
    end else begin
        grp_fu_361_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_361_p1 = grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_grp_fu_361_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_361_p1 = CHin_cast_reg_775;
    end else begin
        grp_fu_361_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37)))) begin
        grp_fu_521_ce = 1'b1;
    end else begin
        grp_fu_521_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln1027_2_fu_369_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign CHin_cast_fu_306_p1 = CHin_read_reg_705;

assign add_ln1027_1_fu_374_p2 = (indvar_flatten31_fu_144 + 48'd1);

assign add_ln1027_fu_403_p2 = (indvar_flatten9_fu_136 + 32'd1);

assign add_ln24_fu_484_p2 = (c_fu_140 + 16'd1);

assign add_ln51_1_fu_545_p2 = (zext_ln51_fu_542_p1 + select_ln25_2_fu_532_p3);

assign add_ln51_fu_563_p2 = (zext_ln51_1_fu_559_p1 + feature_out_read_reg_672);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cmp_i_i_fu_285_p2 = ((mode_read_reg_682 == 2'd0) ? 1'b1 : 1'b0);

assign conv3_i_i_i753_cast_fu_354_p0 = i_fu_132;

assign empty_fu_333_p2 = (switch_selectcmp_fu_321_p2 | cmp_i_i_reg_733);

assign gmem_WDATA = sum_3_reg_929;

assign grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_start = grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_ap_start_reg;

assign grp_fu_237_p0 = mul_i92_reg_740;

assign grp_fu_244_p1 = grp_fu_244_p10;

assign grp_fu_244_p10 = Kx;

assign grp_fu_254_p1 = grp_fu_254_p10;

assign grp_fu_254_p10 = Ky;

assign grp_fu_312_p0 = grp_fu_312_p00;

assign grp_fu_312_p00 = CHin_read_reg_705;

assign grp_fu_312_p1 = grp_fu_312_p10;

assign grp_fu_312_p10 = mul_ln6_reg_769;

assign grp_fu_521_p0 = grp_fu_521_p00;

assign grp_fu_521_p00 = ret_V_mid1_reg_895;

assign grp_fu_521_p1 = CHin_cast_reg_775;

assign grp_fu_598_p0 = grp_fu_598_p00;

assign grp_fu_598_p00 = grp_fu_254_p2;

assign grp_fu_598_p1 = grp_fu_598_p10;

assign grp_fu_598_p10 = grp_fu_244_p2;

assign grp_fu_604_p0 = grp_fu_604_p00;

assign grp_fu_604_p00 = $unsigned(conv3_i_i_i753_cast_fu_354_p0);

assign grp_fu_604_p1 = zext_ln541_reg_757;

assign grp_fu_609_p1 = zext_ln1513_1_reg_725;

assign grp_fu_614_p1 = zext_ln1513_1_reg_725;

assign grp_fu_620_p0 = grp_fu_620_p00;

assign grp_fu_620_p00 = i_4_fu_433_p2;

assign grp_fu_620_p1 = zext_ln541_reg_757;

assign grp_fu_625_p1 = zext_ln1513_reg_718;

assign grp_fu_630_p0 = grp_fu_630_p00;

assign grp_fu_630_p00 = select_ln25_fu_443_p3;

assign grp_fu_630_p1 = rhs_V_1_reg_787;

assign grp_fu_630_p2 = grp_fu_630_p20;

assign grp_fu_630_p20 = select_ln1495_1_fu_490_p3;

assign i_4_fu_433_p2 = (select_ln1495_fu_427_p3 + 16'd1);

assign icmp_ln1027_2_fu_369_p2 = ((indvar_flatten31_fu_144 == mul_ln6_1_reg_802) ? 1'b1 : 1'b0);

assign icmp_ln1027_3_fu_386_p2 = ((indvar_flatten9_fu_136 == mul_ln6_reg_769) ? 1'b1 : 1'b0);

assign icmp_ln1027_4_fu_391_p2 = ((lhs_V_fu_128 == ret_V_12_reg_746) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_346_p2 = ((ret_V_12_reg_746 == 16'd0) ? 1'b1 : 1'b0);

assign j_fu_465_p2 = (select_ln25_fu_443_p3 + 16'd1);

assign mul_i92_fu_290_p0 = zext_ln1513_1_reg_725;

assign mul_i92_fu_290_p1 = zext_ln1513_reg_718;

assign or_ln25_fu_439_p2 = (select_ln1495_4_reg_852 | icmp_ln1027_3_reg_843);

assign rhs_V_1_fu_318_p1 = CHin_read_reg_705;

assign select_ln1027_1_fu_409_p3 = ((icmp_ln1027_3_fu_386_p2[0:0] == 1'b1) ? 32'd1 : add_ln1027_fu_403_p2);

assign select_ln1027_fu_454_p3 = ((select_ln1495_4_reg_852[0:0] == 1'b1) ? i_4_fu_433_p2 : select_ln1495_fu_427_p3);

assign select_ln1495_1_fu_490_p3 = ((icmp_ln1027_3_reg_843[0:0] == 1'b1) ? add_ln24_fu_484_p2 : c_fu_140);

assign select_ln1495_2_fu_506_p3 = ((icmp_ln1027_3_reg_843[0:0] == 1'b1) ? 16'd0 : grp_fu_609_p2);

assign select_ln1495_3_fu_526_p3 = ((icmp_ln1027_3_reg_843[0:0] == 1'b1) ? 48'd0 : mul_ln541_reg_832);

assign select_ln1495_4_fu_396_p3 = ((icmp_ln1027_3_fu_386_p2[0:0] == 1'b1) ? icmp_ln1027_reg_807 : icmp_ln1027_4_fu_391_p2);

assign select_ln1495_fu_427_p2 = i_fu_132;

assign select_ln1495_fu_427_p3 = ((icmp_ln1027_3_reg_843[0:0] == 1'b1) ? 16'd0 : select_ln1495_fu_427_p2);

assign select_ln25_1_fu_512_p3 = ((select_ln1495_4_reg_852[0:0] == 1'b1) ? grp_fu_614_p2 : select_ln1495_2_fu_506_p3);

assign select_ln25_2_fu_532_p3 = ((select_ln1495_4_reg_852[0:0] == 1'b1) ? mul_ln541_1_reg_915 : select_ln1495_3_fu_526_p3);

assign select_ln25_fu_443_p3 = ((or_ln25_fu_439_p2[0:0] == 1'b1) ? 16'd0 : lhs_V_fu_128);

assign sext_ln51_fu_578_p1 = $signed(trunc_ln_fu_568_p4);

assign shl_ln_fu_551_p3 = {{add_ln51_1_fu_545_p2}, {2'd0}};

assign sum_3_fu_588_p3 = ((cmp_i_i_reg_733[0:0] == 1'b1) ? grp_fu_233_p2 : grp_Pool_Pipeline_VITIS_LOOP_36_4_VITIS_LOOP_37_5_fu_216_sum_3_out);

assign sum_fu_338_p3 = ((empty_fu_333_p2[0:0] == 1'b1) ? switch_select_fu_326_p3 : 32'd3685851836);

assign switch_select_fu_326_p3 = ((cmp_i_i_reg_733[0:0] == 1'b1) ? 32'd0 : 32'd1538368188);

assign switch_selectcmp_fu_321_p2 = ((mode_read_reg_682 == 2'd1) ? 1'b1 : 1'b0);

assign trunc_ln_fu_568_p4 = {{add_ln51_fu_563_p2[63:2]}};

assign zext_ln1513_1_fu_250_p1 = Ky;

assign zext_ln1513_fu_240_p1 = Kx;

assign zext_ln51_1_fu_559_p1 = shl_ln_fu_551_p3;

assign zext_ln51_fu_542_p1 = add_ln51_2_reg_905;

assign zext_ln541_1_fu_358_p1 = ret_V_reg_822;

assign zext_ln541_fu_298_p1 = grp_fu_244_p2;

always @ (posedge ap_clk) begin
    zext_ln1513_reg_718[15:8] <= 8'b00000000;
    zext_ln1513_1_reg_725[15:8] <= 8'b00000000;
    zext_ln541_reg_757[31:16] <= 16'b0000000000000000;
    CHin_cast_reg_775[47:16] <= 32'b00000000000000000000000000000000;
    rhs_V_1_reg_787[31:16] <= 16'b0000000000000000;
    sum_reg_797[1:0] <= 2'b00;
    sum_reg_797[6:6] <= 1'b0;
    sum_reg_797[8:8] <= 1'b0;
    sum_reg_797[12:10] <= 3'b000;
    sum_reg_797[14:14] <= 1'b0;
    sum_reg_797[19:17] <= 3'b000;
    sum_reg_797[22:22] <= 1'b0;
    sum_reg_797[26:26] <= 1'b0;
    sum_reg_797[29] <= 1'b0;
end

endmodule //Pool
