// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_Conv,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=5387,HLS_SYN_LUT=6050,HLS_VERSION=2022_2}" *)

module Conv (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 73'd1;
parameter    ap_ST_fsm_state2 = 73'd2;
parameter    ap_ST_fsm_state3 = 73'd4;
parameter    ap_ST_fsm_state4 = 73'd8;
parameter    ap_ST_fsm_state5 = 73'd16;
parameter    ap_ST_fsm_state6 = 73'd32;
parameter    ap_ST_fsm_state7 = 73'd64;
parameter    ap_ST_fsm_state8 = 73'd128;
parameter    ap_ST_fsm_state9 = 73'd256;
parameter    ap_ST_fsm_state10 = 73'd512;
parameter    ap_ST_fsm_state11 = 73'd1024;
parameter    ap_ST_fsm_state12 = 73'd2048;
parameter    ap_ST_fsm_state13 = 73'd4096;
parameter    ap_ST_fsm_state14 = 73'd8192;
parameter    ap_ST_fsm_state15 = 73'd16384;
parameter    ap_ST_fsm_state16 = 73'd32768;
parameter    ap_ST_fsm_state17 = 73'd65536;
parameter    ap_ST_fsm_state18 = 73'd131072;
parameter    ap_ST_fsm_state19 = 73'd262144;
parameter    ap_ST_fsm_state20 = 73'd524288;
parameter    ap_ST_fsm_state21 = 73'd1048576;
parameter    ap_ST_fsm_state22 = 73'd2097152;
parameter    ap_ST_fsm_state23 = 73'd4194304;
parameter    ap_ST_fsm_state24 = 73'd8388608;
parameter    ap_ST_fsm_state25 = 73'd16777216;
parameter    ap_ST_fsm_state26 = 73'd33554432;
parameter    ap_ST_fsm_state27 = 73'd67108864;
parameter    ap_ST_fsm_state28 = 73'd134217728;
parameter    ap_ST_fsm_state29 = 73'd268435456;
parameter    ap_ST_fsm_state30 = 73'd536870912;
parameter    ap_ST_fsm_state31 = 73'd1073741824;
parameter    ap_ST_fsm_state32 = 73'd2147483648;
parameter    ap_ST_fsm_state33 = 73'd4294967296;
parameter    ap_ST_fsm_state34 = 73'd8589934592;
parameter    ap_ST_fsm_state35 = 73'd17179869184;
parameter    ap_ST_fsm_state36 = 73'd34359738368;
parameter    ap_ST_fsm_state37 = 73'd68719476736;
parameter    ap_ST_fsm_state38 = 73'd137438953472;
parameter    ap_ST_fsm_state39 = 73'd274877906944;
parameter    ap_ST_fsm_state40 = 73'd549755813888;
parameter    ap_ST_fsm_state41 = 73'd1099511627776;
parameter    ap_ST_fsm_state42 = 73'd2199023255552;
parameter    ap_ST_fsm_state43 = 73'd4398046511104;
parameter    ap_ST_fsm_state44 = 73'd8796093022208;
parameter    ap_ST_fsm_state45 = 73'd17592186044416;
parameter    ap_ST_fsm_state46 = 73'd35184372088832;
parameter    ap_ST_fsm_state47 = 73'd70368744177664;
parameter    ap_ST_fsm_state48 = 73'd140737488355328;
parameter    ap_ST_fsm_state49 = 73'd281474976710656;
parameter    ap_ST_fsm_state50 = 73'd562949953421312;
parameter    ap_ST_fsm_state51 = 73'd1125899906842624;
parameter    ap_ST_fsm_state52 = 73'd2251799813685248;
parameter    ap_ST_fsm_state53 = 73'd4503599627370496;
parameter    ap_ST_fsm_state54 = 73'd9007199254740992;
parameter    ap_ST_fsm_state55 = 73'd18014398509481984;
parameter    ap_ST_fsm_state56 = 73'd36028797018963968;
parameter    ap_ST_fsm_state57 = 73'd72057594037927936;
parameter    ap_ST_fsm_state58 = 73'd144115188075855872;
parameter    ap_ST_fsm_state59 = 73'd288230376151711744;
parameter    ap_ST_fsm_state60 = 73'd576460752303423488;
parameter    ap_ST_fsm_state61 = 73'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 73'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 73'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 73'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 73'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 73'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 73'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 73'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 73'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 73'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 73'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 73'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 73'd4722366482869645213696;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [72:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] CHin;
wire   [15:0] Hin;
wire   [15:0] Win;
wire   [15:0] CHout;
wire   [7:0] Kx;
wire   [7:0] Ky;
wire   [7:0] Sx;
wire   [7:0] Sy;
wire   [0:0] mode;
wire   [0:0] relu_en;
wire   [63:0] feature_in;
wire   [63:0] W;
wire   [63:0] bias;
wire   [63:0] feature_out;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state65;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_state68;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state73;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state38;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state45;
reg   [63:0] feature_out_read_reg_1415;
reg   [63:0] bias_read_reg_1420;
reg   [63:0] W_read_reg_1426;
reg   [63:0] feature_in_read_reg_1431;
reg   [0:0] relu_en_read_reg_1436;
reg   [0:0] mode_read_reg_1441;
reg   [7:0] Sy_read_reg_1447;
reg   [7:0] Sx_read_reg_1453;
reg   [7:0] Ky_read_reg_1459;
reg   [7:0] Kx_read_reg_1466;
reg   [15:0] CHout_read_reg_1474;
reg   [15:0] Win_read_reg_1481;
reg   [15:0] Hin_read_reg_1487;
reg   [15:0] CHin_read_reg_1492;
wire   [7:0] pad_x_V_1_fu_553_p3;
reg   [7:0] pad_x_V_1_reg_1506;
wire    ap_CS_fsm_state2;
wire   [7:0] pad_y_V_1_fu_560_p3;
reg   [7:0] pad_y_V_1_reg_1511;
wire   [16:0] zext_ln1513_3_fu_579_p1;
reg   [16:0] zext_ln1513_3_reg_1516;
wire   [16:0] add_ln1513_2_fu_582_p2;
reg   [16:0] add_ln1513_2_reg_1521;
wire   [16:0] zext_ln1513_8_fu_600_p1;
reg   [16:0] zext_ln1513_8_reg_1526;
wire   [16:0] add_ln1513_3_fu_603_p2;
reg   [16:0] add_ln1513_3_reg_1532;
wire    ap_CS_fsm_state3;
wire   [15:0] Wout_V_fu_655_p2;
reg   [15:0] Wout_V_reg_1557;
wire    ap_CS_fsm_state24;
wire   [15:0] grp_fu_645_p2;
reg   [15:0] sdiv_ln1513_1_reg_1564;
wire   [31:0] Wout_V_cast_fu_670_p1;
reg   [31:0] Wout_V_cast_reg_1569;
wire    ap_CS_fsm_state25;
wire   [31:0] grp_fu_1317_p2;
reg   [31:0] mul_ln6_1_reg_1581;
wire    ap_CS_fsm_state28;
wire   [47:0] CHout_cast_fu_677_p1;
reg   [47:0] CHout_cast_reg_1587;
wire    ap_CS_fsm_state29;
wire   [15:0] Sy_cast5_fu_689_p1;
reg   [15:0] Sy_cast5_reg_1600;
wire    ap_CS_fsm_state30;
wire   [15:0] pad_y_V_1_cast6_fu_692_p1;
reg   [15:0] pad_y_V_1_cast6_reg_1606;
wire   [15:0] Sx_cast9_fu_695_p1;
reg   [15:0] Sx_cast9_reg_1611;
wire   [15:0] pad_x_V_1_cast10_fu_698_p1;
reg   [15:0] pad_x_V_1_cast10_reg_1616;
wire   [31:0] conv_i_i402_fu_701_p1;
reg   [31:0] conv_i_i402_reg_1621;
wire   [47:0] rhs_V_7_fu_704_p1;
reg   [47:0] rhs_V_7_reg_1628;
wire   [15:0] Kx_cast14_fu_707_p1;
reg   [15:0] Kx_cast14_reg_1633;
wire   [23:0] CHin_cast18_fu_710_p1;
reg   [23:0] CHin_cast18_reg_1638;
wire   [31:0] CHout_cast12_fu_713_p1;
reg   [31:0] CHout_cast12_reg_1643;
wire   [0:0] cmp_i_i4032253_fu_716_p2;
reg   [0:0] cmp_i_i4032253_reg_1648;
wire   [15:0] mul_ln6_fu_724_p2;
reg   [15:0] mul_ln6_reg_1652;
wire   [47:0] grp_fu_683_p2;
reg   [47:0] mul_ln6_2_reg_1657;
wire   [0:0] icmp_ln1027_fu_730_p2;
reg   [0:0] icmp_ln1027_reg_1662;
wire    ap_CS_fsm_state31;
wire   [31:0] grp_fu_1323_p2;
reg   [31:0] ret_V_1_reg_1675;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire   [47:0] grp_fu_745_p2;
reg   [47:0] mul_i_reg_1685;
wire    ap_CS_fsm_state36;
wire   [47:0] add_ln541_fu_787_p2;
reg   [47:0] add_ln541_reg_1693;
wire    ap_CS_fsm_state37;
wire   [47:0] add_ln1027_1_fu_797_p2;
reg   [47:0] add_ln1027_1_reg_1701;
wire   [0:0] icmp_ln1027_2_fu_806_p2;
reg   [0:0] icmp_ln1027_2_reg_1706;
wire   [0:0] icmp_ln1027_1_fu_792_p2;
wire   [15:0] add_ln41_fu_811_p2;
reg   [15:0] add_ln41_reg_1715;
reg   [63:0] gmem_addr_reg_1721;
wire   [0:0] select_ln1027_5_fu_867_p3;
reg   [0:0] select_ln1027_5_reg_1727;
wire  signed [15:0] select_ln42_fu_880_p3;
reg  signed [15:0] select_ln42_reg_1734;
(* use_dsp48 = "no" *) wire   [15:0] i_4_fu_894_p2;
wire   [15:0] select_ln1027_6_fu_904_p3;
reg   [15:0] select_ln1027_6_reg_1751;
wire   [15:0] grp_fu_1328_p3;
reg  signed [15:0] sub_ln1495_reg_1756;
wire    ap_CS_fsm_state40;
wire   [15:0] sub_ln42_fu_923_p2;
reg   [15:0] sub_ln42_reg_1761;
wire    ap_CS_fsm_state41;
wire   [31:0] grp_fu_1345_p2;
reg   [31:0] ret_V_1_mid1_reg_1767;
wire    ap_CS_fsm_state42;
wire   [47:0] grp_fu_931_p2;
reg   [47:0] mul_i_mid1_reg_1777;
wire    ap_CS_fsm_state43;
wire   [15:0] select_ln1027_1_fu_936_p3;
reg   [15:0] select_ln1027_1_reg_1782;
wire    ap_CS_fsm_state44;
wire   [47:0] select_ln42_2_fu_959_p3;
reg   [47:0] select_ln42_2_reg_1788;
wire   [31:0] bitcast_ln1027_fu_966_p1;
reg   [31:0] bitcast_ln1027_reg_1793;
wire   [0:0] icmp_ln51_fu_983_p2;
reg   [0:0] icmp_ln51_reg_1798;
wire    ap_CS_fsm_state46;
wire   [15:0] add_ln1027_2_fu_993_p2;
reg   [15:0] add_ln1027_2_reg_1806;
wire   [0:0] icmp_ln1027_6_fu_999_p2;
reg   [0:0] icmp_ln1027_6_reg_1811;
wire   [0:0] icmp_ln1027_4_fu_988_p2;
wire   [7:0] select_ln45_fu_1004_p3;
reg   [7:0] select_ln45_reg_1816;
wire  signed [15:0] select_ln45_1_fu_1027_p3;
reg  signed [15:0] select_ln45_1_reg_1823;
wire   [7:0] select_ln45_2_fu_1043_p3;
reg   [7:0] select_ln45_2_reg_1833;
wire   [0:0] icmp_ln51_1_fu_1051_p2;
reg   [0:0] icmp_ln51_1_reg_1839;
wire   [15:0] mul_ln45_2_fu_1102_p2;
reg   [15:0] mul_ln45_2_reg_1849;
wire    ap_CS_fsm_state47;
(* use_dsp48 = "no" *) wire  signed [15:0] ret_V_8_fu_1115_p2;
reg  signed [15:0] ret_V_8_reg_1854;
wire   [0:0] and_ln51_1_fu_1154_p2;
reg   [0:0] and_ln51_1_reg_1859;
wire  signed [31:0] grp_fu_1350_p2;
reg  signed [31:0] mul_ln45_reg_1863;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire   [47:0] grp_fu_1163_p2;
reg  signed [47:0] mul_ln45_1_reg_1883;
wire    ap_CS_fsm_state51;
wire  signed [31:0] grp_fu_1362_p2;
reg   [31:0] mul_ln45_3_reg_1888;
wire    ap_CS_fsm_state53;
wire   [63:0] add_ln186_2_fu_1185_p2;
reg   [63:0] add_ln186_2_reg_1893;
reg   [61:0] trunc_ln4_reg_1903;
wire    ap_CS_fsm_state56;
(* use_dsp48 = "no" *) wire   [31:0] tmp_fu_1205_p2;
reg   [31:0] tmp_reg_1908;
wire    ap_CS_fsm_state57;
wire   [47:0] grp_fu_1213_p2;
reg   [47:0] tmp12_reg_1918;
wire    ap_CS_fsm_state58;
wire   [7:0] jj_fu_1222_p2;
wire    ap_CS_fsm_state61;
reg   [63:0] gmem_addr_1_reg_1928;
wire    ap_CS_fsm_state64;
wire   [31:0] grp_fu_401_p2;
reg   [31:0] sum_reg_1934;
wire   [31:0] select_ln70_fu_1309_p3;
reg   [31:0] select_ln70_reg_1940;
wire    ap_CS_fsm_state67;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_start;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_done;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_idle;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_ready;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWVALID;
wire   [63:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWADDR;
wire   [0:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWID;
wire   [31:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWLEN;
wire   [2:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWSIZE;
wire   [1:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWBURST;
wire   [1:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWLOCK;
wire   [3:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWCACHE;
wire   [2:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWPROT;
wire   [3:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWQOS;
wire   [3:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWREGION;
wire   [0:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWUSER;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WVALID;
wire   [31:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WDATA;
wire   [3:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WSTRB;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WLAST;
wire   [0:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WID;
wire   [0:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WUSER;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARVALID;
wire   [63:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARADDR;
wire   [0:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARID;
wire   [31:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARLEN;
wire   [2:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARSIZE;
wire   [1:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARBURST;
wire   [1:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARLOCK;
wire   [3:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARCACHE;
wire   [2:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARPROT;
wire   [3:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARQOS;
wire   [3:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARREGION;
wire   [0:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARUSER;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_RREADY;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_BREADY;
wire   [31:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_sum_2_out;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_sum_2_out_ap_vld;
wire   [31:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_din0;
wire   [31:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_din1;
wire   [1:0] grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_opcode;
wire    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_ce;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg    gmem_BREADY;
reg   [15:0] indvar_flatten_reg_326;
reg   [7:0] ii_reg_337;
reg   [7:0] jj_2_reg_348;
reg   [31:0] sum_1_reg_359;
reg   [31:0] ap_phi_mux_sum_3_phi_fu_375_p6;
reg   [31:0] sum_3_reg_371;
reg    grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_start_reg;
reg   [72:0] ap_NS_fsm;
wire    ap_NS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state59;
wire  signed [63:0] sext_ln1027_1_fu_852_p1;
wire  signed [63:0] sext_ln70_fu_1253_p1;
reg   [15:0] lhs_V_1_fu_190;
wire   [15:0] j_fu_1059_p2;
reg   [15:0] i_fu_194;
reg   [31:0] indvar_flatten21_fu_198;
wire   [31:0] select_ln1027_7_fu_1070_p3;
reg   [15:0] cout_fu_202;
reg   [47:0] indvar_flatten64_fu_206;
reg   [31:0] grp_fu_401_p0;
reg   [31:0] grp_fu_401_p1;
wire    ap_CS_fsm_state66;
wire   [8:0] zext_ln1513_fu_439_p1;
wire   [8:0] add_ln1513_fu_442_p2;
wire   [8:0] sub_ln1513_fu_456_p2;
wire   [7:0] trunc_ln1513_1_fu_462_p4;
wire   [0:0] tmp_4_fu_448_p3;
wire   [7:0] sub_ln1513_1_fu_472_p2;
wire   [7:0] trunc_ln1513_2_fu_478_p4;
wire   [8:0] zext_ln1513_1_fu_496_p1;
wire   [8:0] add_ln1513_1_fu_499_p2;
wire   [8:0] sub_ln1513_2_fu_513_p2;
wire   [7:0] trunc_ln1513_4_fu_519_p4;
wire   [0:0] tmp_5_fu_505_p3;
wire   [7:0] sub_ln1513_3_fu_529_p2;
wire   [7:0] trunc_ln1513_5_fu_535_p4;
wire   [7:0] pad_x_V_fu_488_p3;
wire   [7:0] pad_y_V_fu_545_p3;
wire   [8:0] shl_ln_fu_567_p3;
wire   [16:0] zext_ln1513_2_fu_575_p1;
wire   [8:0] shl_ln1513_1_fu_588_p3;
wire   [16:0] zext_ln1513_7_fu_596_p1;
wire   [17:0] zext_ln1513_4_fu_609_p1;
wire   [17:0] zext_ln1513_5_fu_612_p1;
wire   [17:0] grp_fu_624_p0;
wire   [8:0] grp_fu_624_p1;
wire   [17:0] zext_ln1513_9_fu_630_p1;
wire   [17:0] zext_ln1513_10_fu_633_p1;
wire   [17:0] grp_fu_645_p0;
wire   [8:0] grp_fu_645_p1;
wire   [15:0] grp_fu_624_p2;
wire   [15:0] trunc_ln186_fu_651_p1;
wire   [15:0] trunc_ln186_1_fu_661_p1;
wire   [15:0] Hout_V_fu_664_p2;
wire   [15:0] grp_fu_683_p0;
wire   [31:0] grp_fu_683_p1;
wire   [7:0] mul_ln6_fu_724_p0;
wire   [7:0] mul_ln6_fu_724_p1;
wire  signed [15:0] i_cast7_fu_738_p0;
wire   [31:0] grp_fu_745_p0;
wire   [15:0] grp_fu_745_p1;
wire   [17:0] tmp_3_fu_760_p3;
wire   [63:0] p_cast26_fu_768_p1;
wire   [63:0] empty_fu_772_p2;
wire   [47:0] zext_ln1027_fu_756_p1;
wire   [17:0] p_mid_fu_817_p3;
wire   [63:0] p_cast26_mid1_fu_825_p1;
wire   [63:0] p_mid138_fu_829_p2;
wire   [61:0] p_cast_mid1_fu_834_p4;
wire   [61:0] p_cast_fu_777_p4;
wire   [61:0] select_ln1027_2_fu_844_p3;
wire   [0:0] icmp_ln1027_3_fu_862_p2;
wire   [0:0] or_ln42_fu_874_p2;
wire  signed [15:0] select_ln1027_fu_888_p2;
wire   [15:0] select_ln1027_fu_888_p3;
wire  signed [15:0] grp_fu_1334_p2;
wire  signed [15:0] grp_fu_1339_p2;
wire   [15:0] select_ln1027_3_fu_911_p3;
wire   [15:0] select_ln42_1_fu_917_p3;
wire   [31:0] grp_fu_931_p0;
wire   [15:0] grp_fu_931_p1;
wire   [47:0] zext_ln1027_1_fu_941_p1;
wire   [47:0] zext_ln1027_2_fu_944_p1;
wire   [47:0] add_ln541_2_fu_954_p2;
wire   [47:0] select_ln1027_4_fu_948_p3;
wire   [15:0] ii_cast27_fu_970_p1;
wire  signed [15:0] ret_V_6_fu_974_p2;
wire  signed [16:0] h_V_cast_fu_979_p1;
wire   [7:0] add_ln46_fu_1012_p2;
wire   [15:0] ii_cast27_mid1_fu_1018_p1;
wire  signed [15:0] p_mid1_fu_1022_p2;
wire  signed [16:0] h_V_cast_mid1_fu_1039_p1;
wire   [31:0] add_ln1027_fu_1064_p2;
wire   [7:0] mul_ln45_2_fu_1102_p0;
wire   [7:0] mul_ln45_2_fu_1102_p1;
wire   [15:0] zext_ln186_fu_1112_p1;
wire   [15:0] or_ln51_fu_1120_p2;
wire   [0:0] tmp_6_fu_1125_p3;
wire  signed [16:0] sext_ln1027_fu_1139_p1;
wire   [0:0] icmp_ln1027_5_fu_1143_p2;
wire   [0:0] xor_ln51_fu_1133_p2;
wire   [0:0] and_ln51_fu_1148_p2;
wire   [0:0] select_ln45_3_fu_1107_p3;
wire   [15:0] grp_fu_1163_p1;
wire  signed [47:0] grp_fu_1367_p3;
wire   [49:0] shl_ln2_fu_1174_p3;
wire  signed [63:0] sext_ln186_2_fu_1181_p1;
wire   [23:0] grp_fu_1374_p2;
wire   [31:0] zext_ln45_fu_1193_p1;
wire   [31:0] grp_fu_1213_p0;
wire   [15:0] grp_fu_1213_p1;
wire   [47:0] grp_fu_1355_p3;
wire   [49:0] shl_ln1_fu_1227_p3;
wire   [63:0] zext_ln70_1_fu_1234_p1;
wire   [63:0] add_ln70_fu_1238_p2;
wire   [61:0] trunc_ln3_fu_1243_p4;
wire   [31:0] bitcast_ln67_fu_1263_p1;
wire   [7:0] tmp_1_fu_1266_p4;
wire   [22:0] trunc_ln67_fu_1276_p1;
wire   [0:0] icmp_ln67_1_fu_1286_p2;
wire   [0:0] icmp_ln67_fu_1280_p2;
wire   [0:0] or_ln67_fu_1292_p2;
wire   [0:0] grp_fu_406_p2;
wire   [0:0] rhs_V_fu_1298_p2;
wire   [0:0] ret_V_fu_1304_p2;
wire   [15:0] grp_fu_1317_p0;
wire   [15:0] grp_fu_1317_p1;
wire   [15:0] grp_fu_1323_p0;
wire   [15:0] grp_fu_1323_p1;
wire   [15:0] grp_fu_1328_p0;
wire   [7:0] grp_fu_1328_p1;
wire   [7:0] grp_fu_1328_p2;
wire    ap_CS_fsm_state39;
wire   [7:0] grp_fu_1334_p1;
wire   [7:0] grp_fu_1339_p1;
wire   [15:0] grp_fu_1345_p0;
wire   [15:0] grp_fu_1345_p1;
wire   [15:0] grp_fu_1350_p1;
wire   [15:0] grp_fu_1355_p0;
wire   [15:0] grp_fu_1355_p1;
wire    ap_CS_fsm_state63;
wire   [15:0] grp_fu_1362_p0;
wire   [15:0] grp_fu_1362_p1;
wire   [15:0] grp_fu_1367_p1;
wire    ap_CS_fsm_state52;
wire   [7:0] grp_fu_1374_p0;
wire   [15:0] grp_fu_1374_p1;
reg    grp_fu_401_ce;
wire    ap_CS_fsm_state62;
reg    grp_fu_624_ap_start;
wire    grp_fu_624_ap_done;
reg    grp_fu_645_ap_start;
wire    grp_fu_645_ap_done;
reg    grp_fu_1328_ce;
reg    grp_fu_1334_ce;
reg    grp_fu_1339_ce;
reg    grp_fu_1345_ce;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
reg    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
reg    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
reg    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
reg    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
reg    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
reg    ap_ST_fsm_state73_blk;
wire   [47:0] grp_fu_1213_p00;
wire   [31:0] grp_fu_1317_p00;
wire   [31:0] grp_fu_1317_p10;
wire   [31:0] grp_fu_1323_p00;
wire   [31:0] grp_fu_1345_p00;
wire   [31:0] grp_fu_1355_p00;
wire   [31:0] grp_fu_1362_p00;
wire   [23:0] grp_fu_1374_p00;
wire   [17:0] grp_fu_624_p10;
wire   [17:0] grp_fu_645_p10;
wire   [47:0] grp_fu_683_p00;
wire   [47:0] grp_fu_683_p10;
wire   [47:0] grp_fu_745_p00;
wire   [47:0] grp_fu_931_p00;
wire   [15:0] mul_ln45_2_fu_1102_p00;
wire   [15:0] mul_ln6_fu_724_p00;
wire   [15:0] mul_ln6_fu_724_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 73'd1;
#0 grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_start_reg = 1'b0;
end

Conv_Conv_Pipeline_VITIS_LOOP_53_6 grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_start),
    .ap_done(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_done),
    .ap_idle(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_idle),
    .ap_ready(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_ready),
    .m_axi_gmem_AWVALID(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .sum_1(sum_1_reg_359),
    .CHin(CHin_read_reg_1492),
    .trunc_ln53_cast(trunc_ln4_reg_1903),
    .CHout_cast12(CHout_read_reg_1474),
    .zext_ln1027_1(select_ln1027_1_reg_1782),
    .tmp12(tmp12_reg_1918),
    .W(W_read_reg_1426),
    .sum_2_out(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_sum_2_out),
    .sum_2_out_ap_vld(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_sum_2_out_ap_vld),
    .grp_fu_401_p_din0(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_din0),
    .grp_fu_401_p_din1(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_din1),
    .grp_fu_401_p_opcode(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_opcode),
    .grp_fu_401_p_dout0(grp_fu_401_p2),
    .grp_fu_401_p_ce(grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_ce)
);

Conv_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .CHin(CHin),
    .Hin(Hin),
    .Win(Win),
    .CHout(CHout),
    .Kx(Kx),
    .Ky(Ky),
    .Sx(Sx),
    .Sy(Sy),
    .mode(mode),
    .relu_en(relu_en),
    .feature_in(feature_in),
    .W(W),
    .bias(bias),
    .feature_out(feature_out),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Conv_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARLEN(gmem_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_1_reg_1928),
    .I_AWLEN(32'd1),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(select_ln70_reg_1940),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY)
);

Conv_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_401_p0),
    .din1(grp_fu_401_p1),
    .ce(grp_fu_401_ce),
    .dout(grp_fu_401_p2)
);

Conv_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sum_reg_1934),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_406_p2)
);

Conv_sdiv_18ns_9ns_16_22_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
sdiv_18ns_9ns_16_22_seq_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_624_ap_start),
    .done(grp_fu_624_ap_done),
    .din0(grp_fu_624_p0),
    .din1(grp_fu_624_p1),
    .ce(1'b1),
    .dout(grp_fu_624_p2)
);

Conv_sdiv_18ns_9ns_16_22_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
sdiv_18ns_9ns_16_22_seq_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_645_ap_start),
    .done(grp_fu_645_ap_done),
    .din0(grp_fu_645_p0),
    .din1(grp_fu_645_p1),
    .ce(1'b1),
    .dout(grp_fu_645_p2)
);

Conv_mul_16ns_32ns_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_16ns_32ns_48_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_683_p0),
    .din1(grp_fu_683_p1),
    .ce(1'b1),
    .dout(grp_fu_683_p2)
);

Conv_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U18(
    .din0(mul_ln6_fu_724_p0),
    .din1(mul_ln6_fu_724_p1),
    .dout(mul_ln6_fu_724_p2)
);

Conv_mul_32ns_16ns_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
mul_32ns_16ns_48_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_745_p0),
    .din1(grp_fu_745_p1),
    .ce(1'b1),
    .dout(grp_fu_745_p2)
);

Conv_mul_32ns_16ns_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
mul_32ns_16ns_48_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_931_p0),
    .din1(grp_fu_931_p1),
    .ce(1'b1),
    .dout(grp_fu_931_p2)
);

Conv_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U21(
    .din0(mul_ln45_2_fu_1102_p0),
    .din1(mul_ln45_2_fu_1102_p1),
    .dout(mul_ln45_2_fu_1102_p2)
);

Conv_mul_32s_16ns_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
mul_32s_16ns_48_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mul_ln45_reg_1863),
    .din1(grp_fu_1163_p1),
    .ce(1'b1),
    .dout(grp_fu_1163_p2)
);

Conv_mul_32ns_16ns_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
mul_32ns_16ns_48_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1213_p0),
    .din1(grp_fu_1213_p1),
    .ce(1'b1),
    .dout(grp_fu_1213_p2)
);

Conv_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1317_p0),
    .din1(grp_fu_1317_p1),
    .ce(1'b1),
    .dout(grp_fu_1317_p2)
);

Conv_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1323_p0),
    .din1(grp_fu_1323_p1),
    .ce(1'b1),
    .dout(grp_fu_1323_p2)
);

Conv_mac_mul_sub_16ns_8ns_8ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mac_mul_sub_16ns_8ns_8ns_16_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1328_p0),
    .din1(grp_fu_1328_p1),
    .din2(grp_fu_1328_p2),
    .ce(grp_fu_1328_ce),
    .dout(grp_fu_1328_p3)
);

Conv_mul_mul_16ns_8ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_8ns_16_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_fu_194),
    .din1(grp_fu_1334_p1),
    .ce(grp_fu_1334_ce),
    .dout(grp_fu_1334_p2)
);

Conv_mul_mul_16ns_8ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_8ns_16_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_4_fu_894_p2),
    .din1(grp_fu_1339_p1),
    .ce(grp_fu_1339_ce),
    .dout(grp_fu_1339_p2)
);

Conv_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1345_p0),
    .din1(grp_fu_1345_p1),
    .ce(grp_fu_1345_ce),
    .dout(grp_fu_1345_p2)
);

Conv_mul_mul_16s_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16ns_32_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln45_1_fu_1027_p3),
    .din1(grp_fu_1350_p1),
    .ce(1'b1),
    .dout(grp_fu_1350_p2)
);

Conv_mac_muladd_16ns_16ns_48ns_48_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
mac_muladd_16ns_16ns_48ns_48_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1355_p0),
    .din1(grp_fu_1355_p1),
    .din2(select_ln42_2_reg_1788),
    .ce(1'b1),
    .dout(grp_fu_1355_p3)
);

Conv_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1362_p0),
    .din1(grp_fu_1362_p1),
    .ce(1'b1),
    .dout(grp_fu_1362_p2)
);

Conv_mac_muladd_16s_16ns_48s_48_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
mac_muladd_16s_16ns_48s_48_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ret_V_8_reg_1854),
    .din1(grp_fu_1367_p1),
    .din2(mul_ln45_1_reg_1883),
    .ce(1'b1),
    .dout(grp_fu_1367_p3)
);

Conv_mul_mul_8ns_16ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_mul_8ns_16ns_24_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1374_p0),
    .din1(grp_fu_1374_p1),
    .ce(1'b1),
    .dout(grp_fu_1374_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state59) & (1'b1 == ap_CS_fsm_state58))) begin
            grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_start_reg <= 1'b1;
        end else if ((grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_ready == 1'b1)) begin
            grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cout_fu_202 <= 16'd0;
    end else if (((icmp_ln1027_4_fu_988_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        cout_fu_202 <= select_ln1027_1_reg_1782;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_194 <= 16'd0;
    end else if (((icmp_ln1027_4_fu_988_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        i_fu_194 <= select_ln1027_6_reg_1751;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ii_reg_337 <= select_ln45_2_reg_1833;
    end else if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        ii_reg_337 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten21_fu_198 <= 32'd0;
    end else if (((icmp_ln1027_4_fu_988_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        indvar_flatten21_fu_198 <= select_ln1027_7_fu_1070_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten64_fu_206 <= 48'd0;
    end else if (((icmp_ln1027_4_fu_988_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        indvar_flatten64_fu_206 <= add_ln1027_1_reg_1701;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        indvar_flatten_reg_326 <= add_ln1027_2_reg_1806;
    end else if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        indvar_flatten_reg_326 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        jj_2_reg_348 <= jj_fu_1222_p2;
    end else if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        jj_2_reg_348 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        lhs_V_1_fu_190 <= 16'd0;
    end else if (((icmp_ln1027_4_fu_988_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        lhs_V_1_fu_190 <= j_fu_1059_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        sum_1_reg_359 <= ap_phi_mux_sum_3_phi_fu_375_p6;
    end else if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        sum_1_reg_359 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln51_1_reg_1859) & (1'b1 == ap_CS_fsm_state53)) | ((cmp_i_i4032253_reg_1648 == 1'd1) & (1'b1 == ap_CS_fsm_state56)))) begin
        sum_3_reg_371 <= sum_1_reg_359;
    end else if (((1'd1 == and_ln51_1_reg_1859) & (cmp_i_i4032253_reg_1648 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        sum_3_reg_371 <= grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_sum_2_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        CHin_cast18_reg_1638[15 : 0] <= CHin_cast18_fu_710_p1[15 : 0];
        CHout_cast12_reg_1643[15 : 0] <= CHout_cast12_fu_713_p1[15 : 0];
        Kx_cast14_reg_1633[7 : 0] <= Kx_cast14_fu_707_p1[7 : 0];
        Sx_cast9_reg_1611[7 : 0] <= Sx_cast9_fu_695_p1[7 : 0];
        Sy_cast5_reg_1600[7 : 0] <= Sy_cast5_fu_689_p1[7 : 0];
        cmp_i_i4032253_reg_1648 <= cmp_i_i4032253_fu_716_p2;
        conv_i_i402_reg_1621[15 : 0] <= conv_i_i402_fu_701_p1[15 : 0];
        icmp_ln1027_reg_1662 <= icmp_ln1027_fu_730_p2;
        mul_ln6_2_reg_1657 <= grp_fu_683_p2;
        mul_ln6_reg_1652 <= mul_ln6_fu_724_p2;
        pad_x_V_1_cast10_reg_1616[7 : 0] <= pad_x_V_1_cast10_fu_698_p1[7 : 0];
        pad_y_V_1_cast6_reg_1606[7 : 0] <= pad_y_V_1_cast6_fu_692_p1[7 : 0];
        rhs_V_7_reg_1628[15 : 0] <= rhs_V_7_fu_704_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        CHin_read_reg_1492 <= CHin;
        CHout_read_reg_1474 <= CHout;
        Hin_read_reg_1487 <= Hin;
        Kx_read_reg_1466 <= Kx;
        Ky_read_reg_1459 <= Ky;
        Sx_read_reg_1453 <= Sx;
        Sy_read_reg_1447 <= Sy;
        W_read_reg_1426 <= W;
        Win_read_reg_1481 <= Win;
        bias_read_reg_1420 <= bias;
        feature_in_read_reg_1431 <= feature_in;
        feature_out_read_reg_1415 <= feature_out;
        mode_read_reg_1441 <= mode;
        relu_en_read_reg_1436 <= relu_en;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        CHout_cast_reg_1587[15 : 0] <= CHout_cast_fu_677_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        Wout_V_cast_reg_1569[15 : 0] <= Wout_V_cast_fu_670_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        Wout_V_reg_1557 <= Wout_V_fu_655_p2;
        sdiv_ln1513_1_reg_1564 <= grp_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        add_ln1027_1_reg_1701 <= add_ln1027_1_fu_797_p2;
        add_ln541_reg_1693 <= add_ln541_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        add_ln1027_2_reg_1806 <= add_ln1027_2_fu_993_p2;
        icmp_ln51_reg_1798 <= icmp_ln51_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln1513_2_reg_1521 <= add_ln1513_2_fu_582_p2;
        add_ln1513_3_reg_1532 <= add_ln1513_3_fu_603_p2;
        pad_x_V_1_reg_1506 <= pad_x_V_1_fu_553_p3;
        pad_y_V_1_reg_1511 <= pad_y_V_1_fu_560_p3;
        zext_ln1513_3_reg_1516[15 : 0] <= zext_ln1513_3_fu_579_p1[15 : 0];
        zext_ln1513_8_reg_1526[15 : 0] <= zext_ln1513_8_fu_600_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        add_ln186_2_reg_1893 <= add_ln186_2_fu_1185_p2;
        mul_ln45_3_reg_1888 <= grp_fu_1362_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_1_fu_792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        add_ln41_reg_1715 <= add_ln41_fu_811_p2;
        gmem_addr_reg_1721 <= sext_ln1027_1_fu_852_p1;
        icmp_ln1027_2_reg_1706 <= icmp_ln1027_2_fu_806_p2;
        select_ln1027_5_reg_1727 <= select_ln1027_5_fu_867_p3;
        select_ln42_reg_1734 <= select_ln42_fu_880_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        and_ln51_1_reg_1859 <= and_ln51_1_fu_1154_p2;
        mul_ln45_2_reg_1849 <= mul_ln45_2_fu_1102_p2;
        ret_V_8_reg_1854 <= ret_V_8_fu_1115_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        bitcast_ln1027_reg_1793 <= bitcast_ln1027_fu_966_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        gmem_addr_1_reg_1928 <= sext_ln70_fu_1253_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_4_fu_988_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        icmp_ln1027_6_reg_1811 <= icmp_ln1027_6_fu_999_p2;
        icmp_ln51_1_reg_1839 <= icmp_ln51_1_fu_1051_p2;
        select_ln45_1_reg_1823 <= select_ln45_1_fu_1027_p3;
        select_ln45_2_reg_1833 <= select_ln45_2_fu_1043_p3;
        select_ln45_reg_1816 <= select_ln45_fu_1004_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln1027_5_reg_1727 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        mul_i_mid1_reg_1777 <= grp_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        mul_i_reg_1685 <= grp_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        mul_ln45_1_reg_1883 <= grp_fu_1163_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        mul_ln45_reg_1863 <= grp_fu_1350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        mul_ln6_1_reg_1581 <= grp_fu_1317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln1027_5_reg_1727 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        ret_V_1_mid1_reg_1767 <= grp_fu_1345_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        ret_V_1_reg_1675 <= grp_fu_1323_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        select_ln1027_1_reg_1782 <= select_ln1027_1_fu_936_p3;
        select_ln42_2_reg_1788 <= select_ln42_2_fu_959_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        select_ln1027_6_reg_1751 <= select_ln1027_6_fu_904_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        select_ln70_reg_1940 <= select_ln70_fu_1309_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        sub_ln1495_reg_1756 <= grp_fu_1328_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        sub_ln42_reg_1761 <= sub_ln42_fu_923_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        sum_reg_1934 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        tmp12_reg_1918 <= grp_fu_1213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp_i_i4032253_reg_1648 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
        tmp_reg_1908 <= tmp_fu_1205_p2;
        trunc_ln4_reg_1903 <= {{add_ln186_2_reg_1893[63:2]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

always @ (*) begin
    if ((gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state38_blk = 1'b1;
    end else begin
        ap_ST_fsm_state38_blk = 1'b0;
    end
end

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state45_blk = 1'b1;
    end else begin
        ap_ST_fsm_state45_blk = 1'b0;
    end
end

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_done == 1'b0)) begin
        ap_ST_fsm_state60_blk = 1'b1;
    end else begin
        ap_ST_fsm_state60_blk = 1'b0;
    end
end

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

always @ (*) begin
    if ((gmem_AWREADY == 1'b0)) begin
        ap_ST_fsm_state65_blk = 1'b1;
    end else begin
        ap_ST_fsm_state65_blk = 1'b0;
    end
end

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

always @ (*) begin
    if ((gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state68_blk = 1'b1;
    end else begin
        ap_ST_fsm_state68_blk = 1'b0;
    end
end

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

always @ (*) begin
    if ((gmem_BVALID == 1'b0)) begin
        ap_ST_fsm_state73_blk = 1'b1;
    end else begin
        ap_ST_fsm_state73_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln1027_1_fu_792_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln51_1_reg_1859) & (cmp_i_i4032253_reg_1648 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        ap_phi_mux_sum_3_phi_fu_375_p6 = grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_sum_2_out;
    end else begin
        ap_phi_mux_sum_3_phi_fu_375_p6 = sum_3_reg_371;
    end
end

always @ (*) begin
    if (((icmp_ln1027_1_fu_792_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        gmem_ARADDR = gmem_addr_reg_1721;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state60))) begin
        gmem_ARADDR = grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        gmem_ARLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state60))) begin
        gmem_ARLEN = grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        gmem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state60))) begin
        gmem_ARVALID = grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state73))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        gmem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state60))) begin
        gmem_RREADY = grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state39) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_fu_1328_ce = 1'b1;
    end else begin
        grp_fu_1328_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_fu_1334_ce = 1'b1;
    end else begin
        grp_fu_1334_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_fu_1339_ce = 1'b1;
    end else begin
        grp_fu_1339_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_fu_1345_ce = 1'b1;
    end else begin
        grp_fu_1345_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_401_ce = grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state63) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65)))) begin
        grp_fu_401_ce = 1'b1;
    end else begin
        grp_fu_401_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_401_p0 = grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_401_p0 = sum_1_reg_359;
    end else begin
        grp_fu_401_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_401_p1 = grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_grp_fu_401_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_401_p1 = bitcast_ln1027_reg_1793;
    end else begin
        grp_fu_401_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_624_ap_start = 1'b1;
    end else begin
        grp_fu_624_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_645_ap_start = 1'b1;
    end else begin
        grp_fu_645_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln1027_1_fu_792_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((icmp_ln1027_4_fu_988_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((1'd0 == and_ln51_1_reg_1859) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((cmp_i_i4032253_reg_1648 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            if (((gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign CHin_cast18_fu_710_p1 = CHin_read_reg_1492;

assign CHout_cast12_fu_713_p1 = CHout_read_reg_1474;

assign CHout_cast_fu_677_p1 = CHout_read_reg_1474;

assign Hout_V_fu_664_p2 = (trunc_ln186_1_fu_661_p1 + 16'd1);

assign Kx_cast14_fu_707_p1 = Kx_read_reg_1466;

assign Sx_cast9_fu_695_p1 = Sx_read_reg_1453;

assign Sy_cast5_fu_689_p1 = Sy_read_reg_1447;

assign Wout_V_cast_fu_670_p1 = Wout_V_reg_1557;

assign Wout_V_fu_655_p2 = (trunc_ln186_fu_651_p1 + 16'd1);

assign add_ln1027_1_fu_797_p2 = (indvar_flatten64_fu_206 + 48'd1);

assign add_ln1027_2_fu_993_p2 = (indvar_flatten_reg_326 + 16'd1);

assign add_ln1027_fu_1064_p2 = (indvar_flatten21_fu_198 + 32'd1);

assign add_ln1513_1_fu_499_p2 = ($signed(zext_ln1513_1_fu_496_p1) + $signed(9'd511));

assign add_ln1513_2_fu_582_p2 = (zext_ln1513_2_fu_575_p1 + zext_ln1513_3_fu_579_p1);

assign add_ln1513_3_fu_603_p2 = (zext_ln1513_7_fu_596_p1 + zext_ln1513_8_fu_600_p1);

assign add_ln1513_fu_442_p2 = ($signed(zext_ln1513_fu_439_p1) + $signed(9'd511));

assign add_ln186_2_fu_1185_p2 = ($signed(sext_ln186_2_fu_1181_p1) + $signed(feature_in_read_reg_1431));

assign add_ln41_fu_811_p2 = (cout_fu_202 + 16'd1);

assign add_ln46_fu_1012_p2 = (ii_reg_337 + 8'd1);

assign add_ln541_2_fu_954_p2 = (mul_i_mid1_reg_1777 + zext_ln1027_2_fu_944_p1);

assign add_ln541_fu_787_p2 = (mul_i_reg_1685 + zext_ln1027_fu_756_p1);

assign add_ln70_fu_1238_p2 = (zext_ln70_1_fu_1234_p1 + feature_out_read_reg_1415);

assign and_ln51_1_fu_1154_p2 = (select_ln45_3_fu_1107_p3 & and_ln51_fu_1148_p2);

assign and_ln51_fu_1148_p2 = (xor_ln51_fu_1133_p2 & icmp_ln1027_5_fu_1143_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_NS_fsm_state59 = ap_NS_fsm[32'd58];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln1027_fu_966_p1 = gmem_RDATA;

assign bitcast_ln67_fu_1263_p1 = sum_reg_1934;

assign cmp_i_i4032253_fu_716_p2 = ((CHin_read_reg_1492 == 16'd0) ? 1'b1 : 1'b0);

assign conv_i_i402_fu_701_p1 = CHin_read_reg_1492;

assign empty_fu_772_p2 = (p_cast26_fu_768_p1 + bias_read_reg_1420);

assign grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_start = grp_Conv_Pipeline_VITIS_LOOP_53_6_fu_386_ap_start_reg;

assign grp_fu_1163_p1 = rhs_V_7_reg_1628;

assign grp_fu_1213_p0 = grp_fu_1213_p00;

assign grp_fu_1213_p00 = tmp_reg_1908;

assign grp_fu_1213_p1 = CHout_cast_reg_1587;

assign grp_fu_1317_p0 = grp_fu_1317_p00;

assign grp_fu_1317_p00 = Hout_V_fu_664_p2;

assign grp_fu_1317_p1 = grp_fu_1317_p10;

assign grp_fu_1317_p10 = Wout_V_reg_1557;

assign grp_fu_1323_p0 = grp_fu_1323_p00;

assign grp_fu_1323_p00 = $unsigned(i_cast7_fu_738_p0);

assign grp_fu_1323_p1 = Wout_V_cast_reg_1569;

assign grp_fu_1328_p0 = ((or_ln42_fu_874_p2[0:0] == 1'b1) ? 16'd0 : lhs_V_1_fu_190);

assign grp_fu_1328_p1 = Sx_cast9_reg_1611;

assign grp_fu_1328_p2 = pad_x_V_1_cast10_reg_1616;

assign grp_fu_1334_p1 = Sy_cast5_reg_1600;

assign grp_fu_1339_p1 = Sy_cast5_reg_1600;

assign grp_fu_1345_p0 = grp_fu_1345_p00;

assign grp_fu_1345_p00 = i_4_fu_894_p2;

assign grp_fu_1345_p1 = Wout_V_cast_reg_1569;

assign grp_fu_1350_p1 = conv_i_i402_reg_1621;

assign grp_fu_1355_p0 = grp_fu_1355_p00;

assign grp_fu_1355_p00 = $unsigned(select_ln42_reg_1734);

assign grp_fu_1355_p1 = CHout_cast12_reg_1643;

assign grp_fu_1362_p0 = grp_fu_1362_p00;

assign grp_fu_1362_p00 = mul_ln45_2_reg_1849;

assign grp_fu_1362_p1 = conv_i_i402_reg_1621;

assign grp_fu_1367_p1 = conv_i_i402_reg_1621;

assign grp_fu_1374_p0 = grp_fu_1374_p00;

assign grp_fu_1374_p00 = select_ln45_reg_1816;

assign grp_fu_1374_p1 = CHin_cast18_reg_1638;

assign grp_fu_624_p0 = (zext_ln1513_4_fu_609_p1 - zext_ln1513_5_fu_612_p1);

assign grp_fu_624_p1 = grp_fu_624_p10;

assign grp_fu_624_p10 = Sx_read_reg_1453;

assign grp_fu_645_p0 = (zext_ln1513_9_fu_630_p1 - zext_ln1513_10_fu_633_p1);

assign grp_fu_645_p1 = grp_fu_645_p10;

assign grp_fu_645_p10 = Sy_read_reg_1447;

assign grp_fu_683_p0 = grp_fu_683_p00;

assign grp_fu_683_p00 = CHout_read_reg_1474;

assign grp_fu_683_p1 = grp_fu_683_p10;

assign grp_fu_683_p10 = mul_ln6_1_reg_1581;

assign grp_fu_745_p0 = grp_fu_745_p00;

assign grp_fu_745_p00 = ret_V_1_reg_1675;

assign grp_fu_745_p1 = CHout_cast_reg_1587;

assign grp_fu_931_p0 = grp_fu_931_p00;

assign grp_fu_931_p00 = ret_V_1_mid1_reg_1767;

assign grp_fu_931_p1 = CHout_cast_reg_1587;

assign h_V_cast_fu_979_p1 = ret_V_6_fu_974_p2;

assign h_V_cast_mid1_fu_1039_p1 = p_mid1_fu_1022_p2;

assign i_4_fu_894_p2 = (select_ln1027_fu_888_p3 + 16'd1);

assign i_cast7_fu_738_p0 = i_fu_194;

assign icmp_ln1027_1_fu_792_p2 = ((indvar_flatten64_fu_206 == mul_ln6_2_reg_1657) ? 1'b1 : 1'b0);

assign icmp_ln1027_2_fu_806_p2 = ((indvar_flatten21_fu_198 == mul_ln6_1_reg_1581) ? 1'b1 : 1'b0);

assign icmp_ln1027_3_fu_862_p2 = ((lhs_V_1_fu_190 == Wout_V_reg_1557) ? 1'b1 : 1'b0);

assign icmp_ln1027_4_fu_988_p2 = ((indvar_flatten_reg_326 == mul_ln6_reg_1652) ? 1'b1 : 1'b0);

assign icmp_ln1027_5_fu_1143_p2 = (($signed(sext_ln1027_fu_1139_p1) < $signed(zext_ln1513_3_reg_1516)) ? 1'b1 : 1'b0);

assign icmp_ln1027_6_fu_999_p2 = ((jj_2_reg_348 == Kx_read_reg_1466) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_730_p2 = ((Wout_V_reg_1557 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln51_1_fu_1051_p2 = (($signed(h_V_cast_mid1_fu_1039_p1) < $signed(zext_ln1513_8_reg_1526)) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_983_p2 = (($signed(h_V_cast_fu_979_p1) < $signed(zext_ln1513_8_reg_1526)) ? 1'b1 : 1'b0);

assign icmp_ln67_1_fu_1286_p2 = ((trunc_ln67_fu_1276_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_1280_p2 = ((tmp_1_fu_1266_p4 != 8'd255) ? 1'b1 : 1'b0);

assign ii_cast27_fu_970_p1 = ii_reg_337;

assign ii_cast27_mid1_fu_1018_p1 = add_ln46_fu_1012_p2;

assign j_fu_1059_p2 = ($signed(select_ln42_reg_1734) + $signed(16'd1));

assign jj_fu_1222_p2 = (select_ln45_reg_1816 + 8'd1);

assign mul_ln45_2_fu_1102_p0 = mul_ln45_2_fu_1102_p00;

assign mul_ln45_2_fu_1102_p00 = select_ln45_2_reg_1833;

assign mul_ln45_2_fu_1102_p1 = Kx_cast14_reg_1633;

assign mul_ln6_fu_724_p0 = mul_ln6_fu_724_p00;

assign mul_ln6_fu_724_p00 = Ky_read_reg_1459;

assign mul_ln6_fu_724_p1 = mul_ln6_fu_724_p10;

assign mul_ln6_fu_724_p10 = Kx_read_reg_1466;

assign or_ln42_fu_874_p2 = (select_ln1027_5_fu_867_p3 | icmp_ln1027_2_fu_806_p2);

assign or_ln51_fu_1120_p2 = (select_ln45_1_reg_1823 | ret_V_8_fu_1115_p2);

assign or_ln67_fu_1292_p2 = (icmp_ln67_fu_1280_p2 | icmp_ln67_1_fu_1286_p2);

assign p_cast26_fu_768_p1 = tmp_3_fu_760_p3;

assign p_cast26_mid1_fu_825_p1 = p_mid_fu_817_p3;

assign p_cast_fu_777_p4 = {{empty_fu_772_p2[63:2]}};

assign p_cast_mid1_fu_834_p4 = {{p_mid138_fu_829_p2[63:2]}};

assign p_mid138_fu_829_p2 = (p_cast26_mid1_fu_825_p1 + bias_read_reg_1420);

assign p_mid1_fu_1022_p2 = (sub_ln42_reg_1761 + ii_cast27_mid1_fu_1018_p1);

assign p_mid_fu_817_p3 = {{add_ln41_fu_811_p2}, {2'd0}};

assign pad_x_V_1_cast10_fu_698_p1 = pad_x_V_1_reg_1506;

assign pad_x_V_1_fu_553_p3 = ((mode_read_reg_1441[0:0] == 1'b1) ? pad_x_V_fu_488_p3 : 8'd0);

assign pad_x_V_fu_488_p3 = ((tmp_4_fu_448_p3[0:0] == 1'b1) ? sub_ln1513_1_fu_472_p2 : trunc_ln1513_2_fu_478_p4);

assign pad_y_V_1_cast6_fu_692_p1 = pad_y_V_1_reg_1511;

assign pad_y_V_1_fu_560_p3 = ((mode_read_reg_1441[0:0] == 1'b1) ? pad_y_V_fu_545_p3 : 8'd0);

assign pad_y_V_fu_545_p3 = ((tmp_5_fu_505_p3[0:0] == 1'b1) ? sub_ln1513_3_fu_529_p2 : trunc_ln1513_5_fu_535_p4);

assign ret_V_6_fu_974_p2 = (sub_ln42_reg_1761 + ii_cast27_fu_970_p1);

assign ret_V_8_fu_1115_p2 = ($signed(sub_ln1495_reg_1756) + $signed(zext_ln186_fu_1112_p1));

assign ret_V_fu_1304_p2 = (rhs_V_fu_1298_p2 & relu_en_read_reg_1436);

assign rhs_V_7_fu_704_p1 = Win_read_reg_1481;

assign rhs_V_fu_1298_p2 = (or_ln67_fu_1292_p2 & grp_fu_406_p2);

assign select_ln1027_1_fu_936_p3 = ((icmp_ln1027_2_reg_1706[0:0] == 1'b1) ? add_ln41_reg_1715 : cout_fu_202);

assign select_ln1027_2_fu_844_p3 = ((icmp_ln1027_2_fu_806_p2[0:0] == 1'b1) ? p_cast_mid1_fu_834_p4 : p_cast_fu_777_p4);

assign select_ln1027_3_fu_911_p3 = ((icmp_ln1027_2_reg_1706[0:0] == 1'b1) ? 16'd0 : grp_fu_1334_p2);

assign select_ln1027_4_fu_948_p3 = ((icmp_ln1027_2_reg_1706[0:0] == 1'b1) ? zext_ln1027_1_fu_941_p1 : add_ln541_reg_1693);

assign select_ln1027_5_fu_867_p3 = ((icmp_ln1027_2_fu_806_p2[0:0] == 1'b1) ? icmp_ln1027_reg_1662 : icmp_ln1027_3_fu_862_p2);

assign select_ln1027_6_fu_904_p3 = ((select_ln1027_5_reg_1727[0:0] == 1'b1) ? i_4_fu_894_p2 : select_ln1027_fu_888_p3);

assign select_ln1027_7_fu_1070_p3 = ((icmp_ln1027_2_reg_1706[0:0] == 1'b1) ? 32'd1 : add_ln1027_fu_1064_p2);

assign select_ln1027_fu_888_p2 = i_fu_194;

assign select_ln1027_fu_888_p3 = ((icmp_ln1027_2_reg_1706[0:0] == 1'b1) ? 16'd0 : select_ln1027_fu_888_p2);

assign select_ln42_1_fu_917_p3 = ((select_ln1027_5_reg_1727[0:0] == 1'b1) ? grp_fu_1339_p2 : select_ln1027_3_fu_911_p3);

assign select_ln42_2_fu_959_p3 = ((select_ln1027_5_reg_1727[0:0] == 1'b1) ? add_ln541_2_fu_954_p2 : select_ln1027_4_fu_948_p3);

assign select_ln42_fu_880_p3 = ((or_ln42_fu_874_p2[0:0] == 1'b1) ? 16'd0 : lhs_V_1_fu_190);

assign select_ln45_1_fu_1027_p3 = ((icmp_ln1027_6_fu_999_p2[0:0] == 1'b1) ? p_mid1_fu_1022_p2 : ret_V_6_fu_974_p2);

assign select_ln45_2_fu_1043_p3 = ((icmp_ln1027_6_fu_999_p2[0:0] == 1'b1) ? add_ln46_fu_1012_p2 : ii_reg_337);

assign select_ln45_3_fu_1107_p3 = ((icmp_ln1027_6_reg_1811[0:0] == 1'b1) ? icmp_ln51_1_reg_1839 : icmp_ln51_reg_1798);

assign select_ln45_fu_1004_p3 = ((icmp_ln1027_6_fu_999_p2[0:0] == 1'b1) ? 8'd0 : jj_2_reg_348);

assign select_ln70_fu_1309_p3 = ((ret_V_fu_1304_p2[0:0] == 1'b1) ? 32'd0 : bitcast_ln67_fu_1263_p1);

assign sext_ln1027_1_fu_852_p1 = $signed(select_ln1027_2_fu_844_p3);

assign sext_ln1027_fu_1139_p1 = ret_V_8_fu_1115_p2;

assign sext_ln186_2_fu_1181_p1 = $signed(shl_ln2_fu_1174_p3);

assign sext_ln70_fu_1253_p1 = $signed(trunc_ln3_fu_1243_p4);

assign shl_ln1513_1_fu_588_p3 = {{pad_y_V_1_fu_560_p3}, {1'd0}};

assign shl_ln1_fu_1227_p3 = {{grp_fu_1355_p3}, {2'd0}};

assign shl_ln2_fu_1174_p3 = {{grp_fu_1367_p3}, {2'd0}};

assign shl_ln_fu_567_p3 = {{pad_x_V_1_fu_553_p3}, {1'd0}};

assign sub_ln1513_1_fu_472_p2 = (8'd0 - trunc_ln1513_1_fu_462_p4);

assign sub_ln1513_2_fu_513_p2 = (9'd1 - zext_ln1513_1_fu_496_p1);

assign sub_ln1513_3_fu_529_p2 = (8'd0 - trunc_ln1513_4_fu_519_p4);

assign sub_ln1513_fu_456_p2 = (9'd1 - zext_ln1513_fu_439_p1);

assign sub_ln42_fu_923_p2 = (select_ln42_1_fu_917_p3 - pad_y_V_1_cast6_reg_1606);

assign tmp_1_fu_1266_p4 = {{bitcast_ln67_fu_1263_p1[30:23]}};

assign tmp_3_fu_760_p3 = {{cout_fu_202}, {2'd0}};

assign tmp_4_fu_448_p3 = add_ln1513_fu_442_p2[32'd8];

assign tmp_5_fu_505_p3 = add_ln1513_1_fu_499_p2[32'd8];

assign tmp_6_fu_1125_p3 = or_ln51_fu_1120_p2[32'd15];

assign tmp_fu_1205_p2 = (mul_ln45_3_reg_1888 + zext_ln45_fu_1193_p1);

assign trunc_ln1513_1_fu_462_p4 = {{sub_ln1513_fu_456_p2[8:1]}};

assign trunc_ln1513_2_fu_478_p4 = {{add_ln1513_fu_442_p2[8:1]}};

assign trunc_ln1513_4_fu_519_p4 = {{sub_ln1513_2_fu_513_p2[8:1]}};

assign trunc_ln1513_5_fu_535_p4 = {{add_ln1513_1_fu_499_p2[8:1]}};

assign trunc_ln186_1_fu_661_p1 = sdiv_ln1513_1_reg_1564[15:0];

assign trunc_ln186_fu_651_p1 = grp_fu_624_p2[15:0];

assign trunc_ln3_fu_1243_p4 = {{add_ln70_fu_1238_p2[63:2]}};

assign trunc_ln67_fu_1276_p1 = bitcast_ln67_fu_1263_p1[22:0];

assign xor_ln51_fu_1133_p2 = (tmp_6_fu_1125_p3 ^ 1'd1);

assign zext_ln1027_1_fu_941_p1 = add_ln41_reg_1715;

assign zext_ln1027_2_fu_944_p1 = select_ln1027_1_fu_936_p3;

assign zext_ln1027_fu_756_p1 = cout_fu_202;

assign zext_ln1513_10_fu_633_p1 = Ky_read_reg_1459;

assign zext_ln1513_1_fu_496_p1 = Ky_read_reg_1459;

assign zext_ln1513_2_fu_575_p1 = shl_ln_fu_567_p3;

assign zext_ln1513_3_fu_579_p1 = Win_read_reg_1481;

assign zext_ln1513_4_fu_609_p1 = add_ln1513_2_reg_1521;

assign zext_ln1513_5_fu_612_p1 = Kx_read_reg_1466;

assign zext_ln1513_7_fu_596_p1 = shl_ln1513_1_fu_588_p3;

assign zext_ln1513_8_fu_600_p1 = Hin_read_reg_1487;

assign zext_ln1513_9_fu_630_p1 = add_ln1513_3_reg_1532;

assign zext_ln1513_fu_439_p1 = Kx_read_reg_1466;

assign zext_ln186_fu_1112_p1 = select_ln45_reg_1816;

assign zext_ln45_fu_1193_p1 = grp_fu_1374_p2;

assign zext_ln70_1_fu_1234_p1 = shl_ln1_fu_1227_p3;

always @ (posedge ap_clk) begin
    zext_ln1513_3_reg_1516[16] <= 1'b0;
    zext_ln1513_8_reg_1526[16] <= 1'b0;
    Wout_V_cast_reg_1569[31:16] <= 16'b0000000000000000;
    CHout_cast_reg_1587[47:16] <= 32'b00000000000000000000000000000000;
    Sy_cast5_reg_1600[15:8] <= 8'b00000000;
    pad_y_V_1_cast6_reg_1606[15:8] <= 8'b00000000;
    Sx_cast9_reg_1611[15:8] <= 8'b00000000;
    pad_x_V_1_cast10_reg_1616[15:8] <= 8'b00000000;
    conv_i_i402_reg_1621[31:16] <= 16'b0000000000000000;
    rhs_V_7_reg_1628[47:16] <= 32'b00000000000000000000000000000000;
    Kx_cast14_reg_1633[15:8] <= 8'b00000000;
    CHin_cast18_reg_1638[23:16] <= 8'b00000000;
    CHout_cast12_reg_1643[31:16] <= 16'b0000000000000000;
end

endmodule //Conv
